!function($,_){"use strict";let a=wp.media,d=_.template("<span class='setting compression-stats' data-setting='compression'><span class='name'><%= label %></span><span class='value'><%= value %></span></span>"),e=function(a){return d({label:compression_vars.strings.stats_label,value:a})};if(void 0!==a.view&& void 0!==a.view.Attachment.Details.TwoColumn){let b=a.view.Attachment.Details.TwoColumn;a.view.Attachment.Details.TwoColumn=b.extend({initialize(){b.prototype.initialize.apply(this,arguments),this.listenTo(this.model,"change:wpfiles",this.render)},render(){a.view.Attachment.prototype.render.apply(this,arguments);let b=this.model.get("compress");return void 0===b||(this.model.fetch(),this.views.detach(),this.$el.find(".settings").append(e(b)),this.views.render()),this}})}let c=a.view.Attachment.Details;a.view.Attachment.Details=c.extend({initialize(){c.prototype.initialize.apply(this,arguments),this.listenTo(this.model,"change:wpfiles",this.render)},render(){a.view.Attachment.prototype.render.apply(this,arguments);let b=this.model.get("wpfiles");return void 0===b||(this.model.fetch(),this.views.detach(),this.$el.append(e(b))),this}});let f=wp.media.view.AttachmentFilters.extend({id:"media-attachment-compression-filter",createFilters(){this.filters={all:{text:compression_vars.strings.filter_all,props:{stats:"all"},priority:10},uncompressed:{text:compression_vars.strings.filter_not_processed,props:{stats:"uncompressed"},priority:20},excluded:{text:compression_vars.strings.filter_excl,props:{stats:"excluded"},priority:30}}}}),g=wp.media.view.AttachmentsBrowser;wp.media.view.AttachmentsBrowser=wp.media.view.AttachmentsBrowser.extend({createToolbar(){g.prototype.createToolbar.call(this),this.toolbar.set("MediaLibraryTaxonomyFilter",new f({controller:this.controller,model:this.collection.props,priority:-75}).render())}})}(jQuery,_)